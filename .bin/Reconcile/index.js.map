{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/Reconcile/index.ts"],"names":[],"mappings":";;AAAA,yBAA2B;AAC3B,kCAAoC;AACpC,+BAAiC;AACjC,wCAA0C;AAC1C,gCAAoC;AAEvB,QAAA,SAAS,GAAG,UAAC,QAAgB,EAAE,WAAmB;IAC7D,MAAM,CAAC,OAAO;SACX,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAS,CAAC,QAAQ,CAAC,EAAE,gBAAS,CAAC,WAAW,CAAC,CAAC,CAAC;SAC7D,IAAI,CAAC,UAAC,MAAM,IAAK,OAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC;SACxC,IAAI,CAAC,UAAU,CAAC;SAChB,KAAK,CAAC,UAAC,CAAQ;QACd,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["import * as R from 'ramda';\nimport * as Promise from 'bluebird';\nimport * as clc from 'cli-color';\nimport * as jsBeautify from 'js-beautify';\nimport { jsonToObj } from '../util';\n\nexport const reconcile = (prevJson: string, currentJson: string) => {\n  return Promise\n    .resolve(R.merge(jsonToObj(prevJson), jsonToObj(currentJson)))\n    .then((merged) => JSON.stringify(merged))\n    .then(jsBeautify)\n    .catch((e: Error) => {\n      console.error(clc.yellow(e.toString()));\n    });\n};"]}