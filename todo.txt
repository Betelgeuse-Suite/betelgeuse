- MID: The key names in the json need to be CodeComplaint (use camelcase insteda of dashes)

- MID: What happens when a type changes? Currently it would still be a patch. 
    But the diffing should take in account the tyes as well, because changing
    a type is a breaking change.

- MINOR version not working properly??
  EDIT Sept 7, 2017: Yes, I can confirm this. It says an additino is a major while it should simply be a minor.


- DONE: - version it
    - create a registry of versions, which the App can read and decide if it needs to download or not
    Edit: 09.18.2017 
        
        - Next Steps: - Done/ Start an Ionic App, and test the data fetching and saving on the device
                      - Done/ Once the versioning works in Ionic, start playing around with Swift files

        - Able to push refresh the versions each time based on tags and push them to #master
        - Added a ts client sdk, that is able to fetch the versions.js from the repo through a proxy cdn.

- DONE: add types
    - based on the schema, create .d.ts file, that is used at compile time
    - this file gets included in the build process, like any other dependency
    - since it's based on version, it means that it will work with multiple
    patch/minor version of the src file

    Look at these JSON to Type Generators for different languages:
    - http://json2ts.com/
    - http://jsonclassgenerator.codeplex.com/
    - http://pojo.sodhanalibrary.com/ or http://www.jsonschema2pojo.org/ and https://github.com/joelittlejohn/jsonschema2pojo/wiki/Getting-Started#the-command-line-interface
    
    - https://github.com/insanoid/SwiftyJSONAccelerator

- deploy to s3
    - add to circle ci
        - deploy on commit to master
        - deploy on commit to staging


done - find all the yaml files
done - combine them into one based on their relative path + name
    done - the name of the file becomes the root while the directory the parent root
done - convert the whole thing to json